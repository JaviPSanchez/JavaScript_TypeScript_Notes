'use strict';

/*
Let's now continue learning important JavaScript features.

And one topic that we haven't touched yet is asynchronous JavaScript.

So, the goal of asynchronous JavaScript is basically to deal with long-running tasks, that basically run in the background.

And the most common use case of asynchronous JavaScript is to fetch data from remote servers, in so-called AJAX calls.

And so, that's what we will do in this section

ðŸ‘‰ Promises
ðŸ‘‰ Fetch function
ðŸ‘‰ async await
ðŸ‘‰ error handling.

Antes de empezar el curso me gustaria resaltar una frase de una persona que conoce el metier de FRONT END USER:

"ASYNC / AJAX t's one of the hardest but also most important parts of JavaScript. As a Front End developer, you will write Async code on a daily basis.

Get data from the API / Server, then display that data on a page....

Thats pretty much what front-end is all about..."
*/
